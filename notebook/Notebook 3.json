{
	"name": "Notebook 3",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "srsparkpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "73410b73-8f4c-4518-a692-6422b9d580d9"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/3ebc6c55-9012-4143-ac32-1321e8a5f19a/resourceGroups/chaysynapseResearchRg/providers/Microsoft.Synapse/workspaces/chaysynapseresearchworkspace/bigDataPools/srsparkpool",
				"name": "srsparkpool",
				"type": "Spark",
				"endpoint": "https://chaysynapseresearchworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/srsparkpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.2",
				"nodeCount": 10,
				"cores": 16,
				"memory": 112,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://synapseresearchadlsfilesystem@chaysynapseresearchadls.dfs.core.windows.net/customerinfo/SalesLT.Customer.txt', format='text')\r\n",
					"display(df.limit(10))"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.write.format(\"cosmos.oltp\")\\\r\n",
					"    .option(\"spark.synapse.linkedService\", \"crmcustomer\")\\\r\n",
					"    .option(\"spark.cosmos.container\", \"customer\")\\\r\n",
					"    .mode('append')\\\r\n",
					"    .save()"
				]
			}
		]
	}
}